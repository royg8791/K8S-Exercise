apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: capture
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: capture
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: capture
  local:
    path: /tmp/capture # have to create the directory localy
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - k8s01
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: capture
spec:
  storageClassName: capture
  resources:
    requests:
      storage: 2Gi
  accessModes:
    - ReadWriteOnce
---
apiVersion: v1
kind: Pod
metadata:
  name: capture
  labels:
    name: capture
spec:
  containers:
  - name: capture
    image: nginx:alpine
    resources:
      limits:
        memory: "128Mi"
        cpu: "500m"
    ports:
      - containerPort: 80
    volumeMounts:
      - name: capture
        mountPath: /usr/share/nginx/html
  volumes:
    - name: capture
      persistentVolumeClaim:
        claimName: capture
---
apiVersion: v1
kind: Service
metadata:
  name: capture
spec:
  selector:
    name: capture
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: capture
  labels:
    name: capture
spec:
  rules:
  - host: capture.nif.catchmedia.com
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: capture
            port: 
              number: 80
